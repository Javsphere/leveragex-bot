image: docker:latest

stages:
    - build
    - deploy

variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    DEPENDABOT_GITLAB_IMAGE: andrcuns/dependabot-gitlab
    DEPENDABOT_GITLAB_VERSION: 3.13.1-alpha.1
    PACKAGE_MANAGER_SET: npm
    DIRECTORY: /

build:
    stage: build
    image: docker:stable
    services:
        - docker:dind
    before_script:
        - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    script:
        - docker pull $CI_REGISTRY_IMAGE:latest || true
        - docker build --cache-from $CONTAINER_IMAGE_LATEST -t $CONTAINER_IMAGE_LATEST -t $CONTAINER_IMAGE .
        - docker push $CONTAINER_IMAGE
        - docker push $CONTAINER_IMAGE_LATEST
    cache:
        key: "docker"
        policy: pull
    only:
        - master

deploy-dev-cluster:
    stage: deploy
    services:
        - docker:dind
    variables:
        AWS_DEFAULT_REGION: 'eu-central-1'  # Gültige AWS-Region
        AWS_ECR: '865400167681.dkr.ecr.eu-central-1.amazonaws.com/javlis-leveragex-bot-service'
    before_script:
        - apk add --no-cache curl jq python3 py3-pip py3-setuptools
        - python --version
        - rm /usr/lib/python3.12/EXTERNALLY-MANAGED
        - pip3 install --upgrade pip
        - pip3 --no-cache-dir install --upgrade awscli
        - aws --version
        - docker --version
        - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 865400167681.dkr.ecr.eu-central-1.amazonaws.com
    script:
        - docker build
            --build-arg AES_KEY=$AES_KEY
            --build-arg AWS_KEY=$AWS_KEY
            -t javlis-leveragex-bot-service:dev
            -t javlis-leveragex-bot-service:latest .
        - docker tag javlis-leveragex-bot-service:latest $AWS_ECR:latest
        - docker tag javlis-leveragex-bot-service:dev $AWS_ECR:dev
        - docker push $AWS_ECR:latest
        - docker push $AWS_ECR:dev
        - aws ecs update-service --cluster JavlisDevCluster --service leveragex-bot-service-dev --force-new-deployment
    cache:
        key: "docker"
        policy: pull
    rules:
        -   if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_REF_NAME == "master"'

deploy-prod-cluster:
    stage: deploy
    services:
        - docker:dind
    variables:
        AWS_DEFAULT_REGION: 'eu-central-1'  # Gültige AWS-Region
        AWS_ECR: '865400167681.dkr.ecr.eu-central-1.amazonaws.com/javlis-leveragex-bot-service'
    before_script:
        - apk add --no-cache curl jq python3 py3-pip py3-setuptools
        - python --version
        - rm /usr/lib/python3.12/EXTERNALLY-MANAGED
        - pip3 install --upgrade pip
        - pip3 --no-cache-dir install --upgrade awscli
        - aws --version
        - docker --version
        - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 865400167681.dkr.ecr.eu-central-1.amazonaws.com
    script:
        - docker build
            --build-arg AES_KEY=$AES_KEY
            --build-arg AWS_KEY=$AWS_KEY
            -t javlis-leveragex-bot-service:prod .
        - docker tag javlis-leveragex-bot-service:prod $AWS_ECR:prod
        - docker push $AWS_ECR:prod
        - aws ecs update-service --cluster JavlisProdCluster --service leveragex-bot-service-prod --force-new-deployment
    cache:
        key: "docker"
        policy: pull
    rules:
        -   if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_TAG'
